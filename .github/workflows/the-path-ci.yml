name: CI-CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  ECR_REGISTRY: 720076871190.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY: the-path

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{matrix.node-version}}
      - name: Install dependencies
        run: |
          npm install
          npm ci
      - name: build
        run: |
          npm run build
          npm run test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # build a docker container and
          # push it to ECR so that it can 
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy_cloudformation:
    runs-on: ubuntu-latest
    needs: [build_test_deploy]

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: the-path-dev
          template: template.yml
          parameter-overrides: >-
            ContainerDefaultImage=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }},
            Environment=dev,
            DatabaseUrl=${{secrets.DATABASE_URL}},
            GoogleMapsApiKey=${{secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}}
  # - name: Fill in the new image ID in the Amazon ECS task definition
  #   id: task-def
  #   uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
  #   with:
  #     task-definition: ${{ env.ECS_TASK_DEFINITION }}
  #     container-name: ${{ env.CONTAINER_NAME }}
  #     image: ${{ steps.build-image.outputs.image }}

  # - name: Deploy Amazon ECS task definition
  #   uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
  #   with:
  #     task-definition: ${{ steps.task-def.outputs.task-definition }}
  #     service: ${{ env.ECS_SERVICE}}
  #     cluster: ${{ env.ECS_CLUSTER }}
  #     wait-for-service-stability: true
